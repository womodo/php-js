SELECT 
    childID,
    parentID,
    Value,
    start_date,
    end_date,
    SYS_CONNECT_BY_PATH(childID, ' > ') AS hierarchy_path
FROM 
    your_table
WHERE 
    start_date <= PRIOR end_date  -- 子のstart_dateが親のend_date以下
    AND end_date >= PRIOR start_date  -- 子のend_dateが親のstart_date以上
START WITH parentID != 0  -- 親IDが0ではないレコードから開始
CONNECT BY PRIOR parentID = childID  -- 親から子をたどる
ORDER BY hierarchy_path;

説明
PRIOR キーワードは、階層構造において親と子の値を参照する際に使います。PRIOR を使用することで、親の start_date と end_date を基に子レコードを選択できます。
start_date <= PRIOR end_date: 子の start_date が親の end_date 以下である場合、子は親の有効期間内にあるとみなします。
end_date >= PRIOR start_date: 子の end_date が親の start_date 以上である場合、子は親の有効期間内にあるとみなします。
このクエリにより、親から子をたどる際に、親の有効期間（start_date と end_date）に合致する子レコードだけを選択することができます。これで、親から子への階層を動的にたどり、期間に基づいて有効なレコードのみを取得することができます。

出力例
先ほどのデータに対して、このクエリを実行した場合、以下のように、各階層が正しく表示されるはずです。

ChildID	ParentID	Value	start_date	end_date	hierarchy_path
3	1	30	202401	999912	1 > 3
4	2	40	202401	999912	2 > 4
5	3	50	202401	999912	1 > 3 > 5
6	3	60	202410	999912	1 > 3 > 6
6	4	60	202401	202409	2 > 4 > 6
7	4	70	202401	999912	2 > 4 > 7

ポイント
PRIOR を使って、親と子の有効期間が重なる条件で階層をたどるようにしました。
固定の start_date と end_date を使わずに、階層の親子関係を動的に処理します。





SELECT
COMP_SEC_CD,
PARENT_SEC_CD,
EFF_PHASE_IN_YM,
EFF_PHASE_OUT_YM,
LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD,'|'), '|') || '|' || COMP_SEC_CD AS PATH
FROM VM_DEPARTMENT_CLASS
WHERE COMP_SEC_CD <> '*'
START WITH NOT EXISTS (
    SELECT 1 FROM VM_DEPARTMENT_CLASS VDC WHERE VDC.COMP_SEC_CD = VM_DEPARTMENT_CLASS.PARENT_SEC_CD
)
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
ORDER BY COMP_SEC_CD;


SELECT
COMP_SEC_CD,
PARENT_SEC_CD,
EFF_PHASE_IN_YM,
EFF_PHASE_OUT_YM,
LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD,'|'), '|') || '|' || COMP_SEC_CD AS PATH,
LTRIM(SYS_CONNECT_BY_PATH(EFF_PHASE_IN_YM,'|'), '|') AS START_DATE,
LTRIM(SYS_CONNECT_BY_PATH(EFF_PHASE_OUT_YM,'|'), '|') AS END_DATE,
SEC_NM,
LEVEL_VALUE
FROM VM_DEPARTMENT_CLASS
JOIN VM_DEPARTMENT VD
ON VD.SEC_CD = VM_DEPARTMENT_CLASS.COMP_SEC_CD
WHERE COMP_SEC_CD <> '*'
START WITH NOT EXISTS (
    SELECT 1 FROM VM_DEPARTMENT_CLASS VDC WHERE VDC.COMP_SEC_CD = VM_DEPARTMENT_CLASS.PARENT_SEC_CD
)
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
ORDER BY COMP_SEC_CD,END_DATE;







SELECT 
    '202404' AS YM, 
    COMP_SEC_CD,
    PARENT_SEC_CD,
    LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD, '|'), '|') || '|' || COMP_SEC_CD AS PATH
FROM VM_DEPARTMENT_CLASS
WHERE EFF_PHASE_IN_YM <= '202404' 
  AND EFF_PHASE_OUT_YM >= '202404'
  AND COMP_SEC_CD <> '*'
START WITH PARENT_SEC_CD NOT IN (SELECT COMP_SEC_CD FROM VM_DEPARTMENT_CLASS)
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
AND EFF_PHASE_IN_YM <= '202404' 
AND EFF_PHASE_OUT_YM >= '202404'
ORDER BY COMP_SEC_CD;







WITH YM_LIST AS (
    -- 202401 ～ 202412 の年月リストを生成
    SELECT TO_CHAR(ADD_MONTHS(DATE '2024-01-01', LEVEL - 1), 'YYYYMM') AS YM
    FROM DUAL
    CONNECT BY LEVEL <= 6
),
VALID_DEPARTMENT AS (
    -- 各年月ごとに有効なデータを取得
    SELECT DISTINCT 
        Y.YM, 
        C.CONTRACT, 
        C.COMP_SEC_CD, 
        C.PARENT_SEC_CD, 
        C.EFF_PHASE_IN_YM, 
        C.EFF_PHASE_OUT_YM
    FROM YM_LIST Y
    JOIN VM_DEPARTMENT_CLASS C
        ON C.EFF_PHASE_IN_YM <= Y.YM 
        AND C.EFF_PHASE_OUT_YM >= Y.YM
)
SELECT 
    V.YM,
    LEVEL AS HIERARCHY_LEVEL,
    LTRIM(SYS_CONNECT_BY_PATH(V.PARENT_SEC_CD, '|'), '|') || '|' || V.COMP_SEC_CD AS PATH,
    V.COMP_SEC_CD,
    V.PARENT_SEC_CD,
    V.EFF_PHASE_IN_YM,
    V.EFF_PHASE_OUT_YM
FROM VALID_DEPARTMENT V
WHERE V.COMP_SEC_CD <> '*'
-- 有効なデータの中で親が存在しない（または指定YM時点で最上位）のものをルートにする
START WITH V.PARENT_SEC_CD NOT IN (SELECT COMP_SEC_CD FROM VALID_DEPARTMENT WHERE YM = V.YM)
CONNECT BY PRIOR V.COMP_SEC_CD = V.PARENT_SEC_CD
    AND PRIOR V.YM = V.YM  -- 同じ年月内でのみ親子関係をたどる
ORDER BY V.COMP_SEC_CD, V.YM, PATH;









SELECT 
    COMP_SEC_CD,
    SEC_NM,
    LEVEL_VALUE,
    '202404' AS EFF_PHASE_YM,
    LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD, '|'), '|') || '|' || COMP_SEC_CD AS PATH
FROM VM_DEPARTMENT_CLASS
JOIN VM_DEPARTMENT
ON VM_DEPARTMENT.SEC_CD = VM_DEPARTMENT_CLASS.COMP_SEC_CD
WHERE EFF_PHASE_IN_YM <= '202404'
  AND EFF_PHASE_OUT_YM >= '202404'
  AND COMP_SEC_CD <> '*'
START WITH PARENT_SEC_CD NOT IN (SELECT COMP_SEC_CD FROM VM_DEPARTMENT_CLASS)
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
AND EFF_PHASE_IN_YM <= '202404'
AND EFF_PHASE_OUT_YM >= '202404'
ORDER BY COMP_SEC_CD;









SELECT
COMP_SEC_CD AS SEC_CD,
SEC_NM,
LEVEL_VALUE,
'202304' AS EFF_PHASE_YM,
LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD, '|'), '|') || '|' || COMP_SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT_CLASS VDC
JOIN VM_DEPARTMENT VD
  ON VD.SEC_CD = VDC.COMP_SEC_CD
WHERE EFF_PHASE_IN_YM <= '202304'
  AND EFF_PHASE_OUT_YM >= '202304'
  AND COMP_SEC_CD <> '*'
START WITH PARENT_SEC_CD NOT IN ( SELECT COMP_SEC_CD FROM VM_DEPARTMENT_CLASS )
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
  AND EFF_PHASE_IN_YM <= '202304'
  AND EFF_PHASE_OUT_YM >= '202304'


SELECT
  COMP_SEC_CD AS SEC_CD,
  SEC_NM,
  LEVEL_VALUE,
  '202501' AS EFF_PHASE_YM,
  LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD, '|'), '|') || '|' || COMP_SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT_CLASS VDC
JOIN VM_DEPARTMENT VD
  ON VD.CONTRACT = VDC.CONTRACT
 AND VD.SEC_CD = VDC.COMP_SEC_CD
WHERE EFF_PHASE_IN_YM <= '202501'
  AND EFF_PHASE_OUT_YM >= '202501'
  AND COMP_SEC_CD <> '*'
START WITH PARENT_SEC_CD NOT IN ( SELECT COMP_SEC_CD FROM VM_DEPARTMENT_CLASS )
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
  AND EFF_PHASE_IN_YM <= '202501'
  AND EFF_PHASE_OUT_YM >= '202501'

UNION

SELECT
  SEC_CD,
  SEC_NM,
  LEVEL_VALUE,
  '202501' AS EFF_PHASE_YM,
  SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT
WHERE LEVEL_VALUE = 0
  AND SEC_CD <> '*'
  AND EXISTS ( SELECT 1 FROM VM_DEPARTMENT_CLASS
                WHERE PARENT_SEC_CD = SEC_CD
                  AND EFF_PHASE_IN_YM <= '202501'
                  AND EFF_PHASE_OUT_YM >= '202501'
                  AND COMP_SEC_CD <> '*' )

ORDER BY LEVEL_VALUESELECT
  COMP_SEC_CD AS SEC_CD,
  SEC_NM,
  LEVEL_VALUE,
  '202501' AS EFF_PHASE_YM,
  LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD, '|'), '|') || '|' || COMP_SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT_CLASS VDC
JOIN VM_DEPARTMENT VD
  ON VD.CONTRACT = VDC.CONTRACT
 AND VD.SEC_CD = VDC.COMP_SEC_CD
WHERE EFF_PHASE_IN_YM <= '202501'
  AND EFF_PHASE_OUT_YM >= '202501'
  AND COMP_SEC_CD <> '*'
START WITH PARENT_SEC_CD NOT IN ( SELECT COMP_SEC_CD FROM VM_DEPARTMENT_CLASS )
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
  AND EFF_PHASE_IN_YM <= '202501'
  AND EFF_PHASE_OUT_YM >= '202501'

UNION

SELECT
  SEC_CD,
  SEC_NM,
  LEVEL_VALUE,
  '202501' AS EFF_PHASE_YM,
  SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT
WHERE LEVEL_VALUE = 0
  AND SEC_CD <> '*'
  AND EXISTS ( SELECT 1 FROM VM_DEPARTMENT_CLASS
                WHERE PARENT_SEC_CD = SEC_CD
                  AND EFF_PHASE_IN_YM <= '202501'
                  AND EFF_PHASE_OUT_YM >= '202501'
                  AND COMP_SEC_CD <> '*' )

ORDER BY LEVEL_VALUE















SELECT
  COMP_SEC_CD AS SEC_CD,
  SEC_NM,
  LEVEL_VALUE,
  '202501' AS EFF_PHASE_YM,
  LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD, '|'), '|') || '|' || COMP_SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT_CLASS VDC
JOIN VM_DEPARTMENT VD
  ON VD.CONTRACT = VDC.CONTRACT
 AND VD.SEC_CD = VDC.COMP_SEC_CD
WHERE EFF_PHASE_IN_YM <= '202501'
  AND EFF_PHASE_OUT_YM >= '202501'
  AND COMP_SEC_CD <> '*'
START WITH PARENT_SEC_CD NOT IN ( SELECT COMP_SEC_CD FROM VM_DEPARTMENT_CLASS )
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
  AND EFF_PHASE_IN_YM <= '202501'
  AND EFF_PHASE_OUT_YM >= '202501'

UNION

SELECT
  SEC_CD,
  SEC_NM,
  LEVEL_VALUE,
  '202501' AS EFF_PHASE_YM,
  SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT
WHERE LEVEL_VALUE = 0
  AND SEC_CD <> '*'
  AND EXISTS ( SELECT 1 FROM VM_DEPARTMENT_CLASS
                WHERE PARENT_SEC_CD = SEC_CD
                  AND EFF_PHASE_IN_YM <= '202501'
                  AND EFF_PHASE_OUT_YM >= '202501'
                  AND COMP_SEC_CD <> '*' )

ORDER BY LEVEL_VALUE










WITH PARAMS AS (SELECT '202501' AS TARGET_YM FROM DUAL)

SELECT
  COMP_SEC_CD AS SEC_CD,
  SEC_NM,
  LEVEL_VALUE,
  (SELECT TARGET_YM FROM PARAMS) AS EFF_PHASE_YM,
  LTRIM(SYS_CONNECT_BY_PATH(PARENT_SEC_CD, '|'), '|') || '|' || COMP_SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT_CLASS VDC
JOIN VM_DEPARTMENT VD
  ON VD.CONTRACT = VDC.CONTRACT
 AND VD.SEC_CD = VDC.COMP_SEC_CD
WHERE COMP_SEC_CD <> '*'
  AND EFF_PHASE_IN_YM <= (SELECT TARGET_YM FROM PARAMS)
  AND EFF_PHASE_OUT_YM >= (SELECT TARGET_YM FROM PARAMS)
START WITH PARENT_SEC_CD NOT IN ( SELECT COMP_SEC_CD FROM VM_DEPARTMENT_CLASS )
CONNECT BY PRIOR COMP_SEC_CD = PARENT_SEC_CD
  AND PRIOR EFF_PHASE_IN_YM <= (SELECT TARGET_YM FROM PARAMS)
  AND PRIOR EFF_PHASE_OUT_YM >= (SELECT TARGET_YM FROM PARAMS)

UNION

SELECT
  SEC_CD,
  SEC_NM,
  LEVEL_VALUE,
  (SELECT TARGET_YM FROM PARAMS) AS EFF_PHASE_YM,
  SEC_CD AS SEC_PATH
FROM VM_DEPARTMENT
WHERE LEVEL_VALUE = 0
  AND SEC_CD <> '*'
  AND EXISTS ( SELECT 1 FROM VM_DEPARTMENT_CLASS
                WHERE PARENT_SEC_CD = SEC_CD
                  AND EFF_PHASE_IN_YM <= (SELECT TARGET_YM FROM PARAMS)
                  AND EFF_PHASE_OUT_YM >= (SELECT TARGET_YM FROM PARAMS)
                  AND COMP_SEC_CD <> '*' )

ORDER BY SEC_CD;
