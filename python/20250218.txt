Python学院～データ分析編／統計の基礎とPandasライブラリの活用（１日間）

１．データ分析とは
データ分析とは、何らかの手段でデータ（情報）を収集し、それを加工し分析することによって、
意思決定に役立つ傾向などを見出すことを言う。

（１）データ分析のメリット
データ分析を行うことで得られるメリット
・これまで「なんとなく」でやってきた仕事に、明確な根拠を与えることができる
・仕事の優先順位をつけ、業務改善のきっかけを作ることができる

データ分析をすることで、現状について正しく把握することができる。
「Aが正解だと思っていたが、実はBが正解だった」ということは、頻繁に起こる。
現状について把握し、「どこに課題があるのか」や「原因は何なのか」を特定することで、
改善につなげることがデータ分析の目的。

（２）データ分析でできること
データ分析を行うことで、具体的には以下のような改善を行うことができる。
・製造現場のラインを分析し、ボトルネックになっている工程を洗い出す
・翌月の来店人数を予測し、仕入れの量を調整する
・時間帯ごとの混雑状況を把握し、提供するサービスを改善する
・入社時のテストから、３年後の離職確率を分析し、採用判断に活かす
・サイトから商品を購入した顧客に、その他オススメの商品を自動レコメンドする

（３）データの読み方を意識する
データを読み解く上で、誤った視点で見たり、解釈を間違ってしまったりすることがある。
それぞれの問題について「注目すべきキーワード」と「その理由」を中心に考える。

（４）データを扱う際の注意点
条件をそろえずに分析結果の比較を行ってしまうと、誤った結論を導いてしまうことがわかる。
分析結果の比較を行う場合には、「条件をそろえること」が重要。

条件をそろえることは、余計な影響を取り除くことにつながる。
この考え方は、統計学の基本的な部分でもある一方で、非常に難しいもの。

例えば、自社の「昨年の９月の売上と今年９月の売上」を比較したい場合には、
「日本全体の景気」や「業界全体の景気」が異なるため、誤った結論が導かれるのか。
あるいは、どのような方法で条件をそろえる必要があるのか。

このように、余計な影響を取り除くことが難しい場合には、
「さらに外部に比較対象を作る」ことが有効な方法の一つ。

具体的には、同業他社の同時期の売上も踏まえつつ、
自社の「昨年の９月の売上と今年９月の売上」を比較することで、
日本全体の景気や業界全体の景気動向を考慮した比較が可能となる。



２．要約統計量～データ分析における代表的な値
集計・加工する前のデータを「ローデータ」（生のデータ）と呼ぶのに対し、集計後のデータを総称して「要約統計量」と呼ぶ。

要約統計量は大きく代表値と散布度に分けられる。
代表値とは、データの中心的傾向や特長を表す数値。

（１）平均値
データの合計値をデータの個数で割ったもの。
（２）中央値
データを順番に並び替えた際に真ん中に位置するもの。
※データの個数が偶数の場合は、真ん中２つのデータの平均を中央値とする。
（３）標準偏差
データ集合がどれだけばらついているかを表す。
（４）最小値
データの中で一番小さい値のこと。
（５）最大値
データの中で一番大きい値のこと。

データを小さい順に並べた時に、そのデータを４糖分した際の区切り値を「四分位数」という。
５０％の値を表す中央値（第２四分位数）。
（６）第１四分位数
データを小さい順に並べた時に、初めから数えて２５％の位置にある数。
（７）第３四分位数
データを小さい順に並べた時に、初めから数えて７５％の位置にある数。




３．Pythonにおけるデータ分析でよく使うライブラリ
（１）NumPy（ナムパイ）
高速な数値計算ができる。
対象のデータ型は限られているが、同じデータ型の値を処理することに適しており、
Pythonの弱点である計算の遅さをカバーすることができる。

（２）Pandas（パンダス）
効率的にデータ分析ができる。
Pandasは複数のデータ型（数値型、文字列型など）の値を、同時に保有することができ、統計的処理と相性が良い。
Pythonだけでデータ分析wお行う場合に比べ、効率的に分析することができる。

Pandasを使用することで、以下のことを簡単に実現できる。
・データの読み込み（CSVファイル、Excelファイル）
・表形式のデータの中身確認（形状、特長、要約統計量）
・データの操作（列の追加、削除、行の追加、削除、データの検索）
・データの集計（列や行単位での平均値の表示、グルーピングして集計）
・データの可視化（線グラフ、棒グラフ、ヒストグラム、散布図など）

（３）matplotlib（マットプロットリブ）
グラフを描画して簡単にデータの可視化ができる。

数値計算を得意とするNumPyと一緒に使われることが多い。
またJupyter Notebookと相性が良く、コードと共にグラフを描画し、説明力の高いレポートなどを作成することができる。

棒グラフや折れ線グラフ、円グラフ、ヒストグラムなど、様々な種類のグラフを描画できる。
Pandasのデータフレームや、読み込んだファイルのデータからも描画することが可能。
主に2次元のものが多いが、3次元グラフも描画でき、また画像を描画することもできる。

（４）seaborn（シーボーン）
よりきれいで見やすいグラフの描画ができる。

グラフを描画するためのPythonのデータ可視化ライブラリ。
matplotlibと合わせて使うことが多い。
matplotlibで描画したグラフをよりきれいに見せることができる。

（５）scikit-learn（サイキット・ラーン）
初心者でも簡単に機械学習ができる。

機械学習に用いるPythonのライブラリ。
難しいプログラムを実装することなく、初心者でも簡単に機械学習を試すことができる。
分類・回帰・クラスタリング・次元削除などの機械学習アルゴリズムが最初から実装されている。

また、NumPy、Pandas、matplotlibなどのライブラリと連携しやすいように設計されている。
NumPyやPandasで前処理したデータを、機械学習の入力データとしてscikit-learnで処理するなどの連携ができる。



４．Pandasを使ってデータを把握する
→ CSVファイルやExcelファイルからデータを読み込む、データの表示・確認、データの抽出、データの検索、データの並び替え、データのグループ化・集計の方法


５．Pandasを使ってデータを処理する
→ 欠損値の確認、データの削除、欠損値の補完、列の追加、データの結合


６．Pandasを使って相関分析を行う
（１）相関分析とは
「２つの事象が関連している程度」を表す相関係数を求め、関係性の強さを数値化する分析方法を、相関分析という。
「Aが増える（減る）とBも増える（減る）」のように、２つの事象が同じ方向に動く場合に、「正の相関がある」という。
「Aが増える（減る）とBが減る（増える）」のように、２つの事象が反対方向に動く場合に、「負の相関がある」という。

相関関係の例
・気温が上がるとアイスの売上が増える
・収入が増えると消費が増える
・テレビを見る時間が増えると、読書の時間が減る

（２）相関係数のイメージを掴む
相関係数は、必ず「-1～0～1」の範囲に収まる。
相関係数が「0～1」は「正の相関」があることを示しており、
相関係数が「-1～0」は「負の相関」があることを示す。

相関係数の大まかな目安
・0.0～0.2未満 ⇒ 無相関あるいはほとんど相関なし
・0.2～0.4未満 ⇒ 弱い相関
・0.4～0.7未満 ⇒ 中程度の相関
・0.7～1.0未満 ⇒ 強い相関
※この目安は、正の相関でも、負の相関でも同様

（３）相関係数の注意点（疑似相関）
疑似相関とは、「第３の変数」が２つの変数の両方に影響を与える現象。
疑似相関に惑わされると、誤った結論を導いてしまうことがある。
そのため、データを分析する際には、「背景に共通する変数はないか」を考える必要がある。

疑似相関の例
水難事故の件数とビールの売上には、正の相関がある。
では、ビールの売上が増えれば増えるほど、水難事故の件数も増えると結論づけることは正しいか？
このケースでは、第３の変数として、「気温」が影響している。

実際は気温が上がったことで、水辺で遊ぶ人の数が増え、結果的には水難事故の件数が増え、またビールの売上も上がる。

このように、背景には別の因子の影響があるにも関わらず、実は因果関係にない変数同士が、
見た目には相関しているように見えることがあるので、注意する。


（４）Pandasを使って相関係数を求める方法


７．Pandasを使って回帰分析を行う
（１）回帰分析とは
「A（という変数）がB（という変数）に与える影響」について分析・予測・影響関係を検討するための手法。

回帰分析により明らかになる事象の例
・営業時間の長さが純利益に与える影響
・商品の価格が販売個数に与える影響
・教育研修の充実が企業業績に与える影響

相関関係との大きな違いとして、因果関係の方向がはっきりしているという点があげられる。
相関関係は単に２つの変数の関連を表しているだけなので、
「残業時間が増えるとミスの数が増える」のか、「ミスの数が増えると残業時間が増えるのか」は明らかではない。
例）残業時間 ← 双方向に影響を与える → ミスの数
    ※残業時間が増加した結果、ミスの数が増える
    ※ミスが増加した結果、残業が増える

回帰分析では、因果の方向を明確にすることができる。
つまり、「商品の価格が下がったから、販売個数が上がった」というロジックを組み立てることができる。
例）商品価格 → 一方項にしか影響を与えない → 販売個数
    ※商品の価格が下がった結果、販売個数が増加

このため、分析を行う上で、もっとも重要なことが「Ａ（商品の価格）がＢ（販売個数）よりも先に変化している」こと。
商品の価格のように、「もう一方の変化を説明する」もの（原因となる変数）を「説明変数」と呼び、
販売個数のように、「結果となる変数」を「被説明変数」（あるいは「従属変数」、「目的変数」）と呼ぶ。


（２）単回帰分析、重回帰分析
回帰分析の中にも、単回帰分析と重回帰分析の２種類がある。違いは、説明変数の個数が１つか複数か。
・説明変数が１つの回帰分析を、単回帰分析という
・説明変数が２つ以上の回帰分析を、重回帰分析という

例えば、営業職の「外回り時間」に加え、「勤続年数」も「売上獲得金額」に影響を与えているか分析する場合には、重回帰分析を使用する。
また「身長」が「体重」に影響を与えているか分析する場合は、説明変数は「身長」ひとつだけなので、単回帰分析を使用する。


（３）回帰分析の結果を読み解く
・回帰係数
相関分析での相関係数と同様に、回帰分析でも回帰係数を用いる。
回帰係数は説明変数が１上がったときに、目的変数がどのくらい増減するかを表す。

つまり、回帰係数によってAがどのぐらいBに影響を与えているかが分かる。
具定例
・教育研修費が企業業績に与える影響を分析したところ、0.781であった
  ⇒「教育研修費が増えるほど、企業業績が増加する」ことを示している
・営業時間の長さが純利益に与える影響を分析したところ、-0.624であった
  ⇒「営業時間が長くなるほど、純利益は減る」ことを示している

回帰係数が「０」だった場合には、AhaBに影響を与えないという意味になる。

・切片
回帰分析における切片とはAが０だった場合のBの値のことをいう。

・決定係数
回帰係数の他に決定係数も回帰分析において重要な値。
決定係数とはAがどれだけBの値を説明（決定）しているかの指標。
つまり、回帰分析の精密さを表している。

決定係数は０～１の値を取り、１に近いほど精度が高いという意味になる。
決定係数を確認することで、精度の低いデータを分析に使用することを増ぐことができる。
回帰分析の決定係数の0.5は相関係数の0.7に相当すると考えられる。
そのため、「0.5」を超えると影響が強いといえる。

（４）回帰分析の活用例
回帰分析の特徴として、相関よりも応用の幅が広い点がある。
実際、海外では応用が進んでおり、企業とデータ分析の専門家が提携をするなどして、
生産性を向上させるための分析が行われている。


（５）Pythonライブラリを使って回帰分析を行う

